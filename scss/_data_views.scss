@use 'color';
@use 'buttons';

:root .mutable-data-view {
    max-height: 100%;
    min-height: 8em;

    .mutable-data-header {
        padding: 0.6em 1em 0.2em 1em;
        position: relative;

        a.help-info {
            float: initial !important;
            position: absolute;
            top: 0.4rem;
            right: 0.7rem;
        }

        .btn.btn-sm {
            min-height: initial;
            font-size: 0.8em;
        }
    }

    .mutable-data-entries {
        padding: 0.4em 0;
        margin-bottom: 0.2em;
        overflow: auto;

        .mutable-data-entry {
            padding: 0.2em 0.8em;
            display: flex;
            align-items: center;

            &:nth-child(even) {
                background-color: color.shade(bg, 10%, 0.3) !important;
            }

            &:hover {
                background-color: color.shade(bg, 20%, 0.4) !important;
            }


            input[type="number"] {
                width: 7ch;
                text-align: right;
            }

            input, select {
                border-radius: 0.28rem;
                border-color: color.shade(bg, 10%);
                background-color: color.shade(bg, 0%);
                color: color.get(fg);
                padding: 0.22rem 0.34rem;

                &:focus {
                    border-color: color.shade(accent4, 10%);
                }
                &:invalid {
                    border-color: #f22;
                }
            }

            select {
                font-size: 0.9em;
            }

            key {
                flex: 1 0 auto;
                max-width: 16ch;
                display: inline-block;
                white-space: nowrap;

                abbr {
                    margin-right: 0.5em;
                }
            }

            value {
                flex: 1 1 auto;
                overflow: hidden;
                display: flex;
                justify-content: space-around;

                input[type="date"] {
                    max-width: 100%;
                }
            }
        }

        .mutable-data-entry:nth-child(even) {
            background-color: color.shade(bg, 10%, 0.2);
        }
        .mutable-data-entry:nth-child(odd) {
            background-color: color.shade(bg, 5%, 0.2);
        }
    }

    &:not(.dirty) {
        .mutable-data-save.btn {
            display: none !important;
        }
    }

    &.dirty.invalid {
        .mutable-data-save.btn {
            opacity: 0.5;
            pointer-events: none;
        }
    }

    .btn.mutable-data-entry-add,
    .btn.mutable-data-entry-delete {
        svg {
            .fa-secondary {
                color: color.shade(bg, 25%);
                opacity: 0.8;
            }
        }
    }

    .btn.mutable-data-entry-add {
        color: var(--sauce-positive) !important;
    }

    .btn.mutable-data-entry-delete {
        color: var(--sauce-negative) !important;
        flex: 1 0;
        display: flex;
        justify-content: flex-end;
        min-height: initial;

        > svg[data-icon] {
            height: 1em !important;
            margin: -0.2em 0.1em;
        }
    }
}
